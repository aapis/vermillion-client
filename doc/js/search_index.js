var search_data = {"index":{"searchIndex":["changebranchtest","configurationtest","createtest","updatetest","vermillion","cfg","controller","base","change","create","firstrun","status","update","helper","apicommunication","endpoint","formatting","network","results","time","request","router","test","base","utils","add()","add()","all()","bootstrap!()","branch()","can_exec?()","config()","config()","constant?()","default()","default()","delete()","exec()","exists?()","formatted()","get()","get()","get()","human_readable()","load()","new()","new()","new()","new()","new()","one()","one()","options()","populate_config()","post()","post_exec()","pre_exec()","pre_exec()","pre_exec()","pre_exec()","protocol=()","route()","sample()","send_to_all()","send_to_one()","servers()","setup()","should_eval_to()","symbolize()","test?()","test_change_branch_one()","test_config_exist()","test_default()","test_default()","test_update_config()","test_update_one()","to_query_string()","to_s()","gemfile","gemfile.lock","readme","rakefile","setup","changebranchtest.html","configurationtest.html","createtest.html","gemfile.html","gemfile_lock.html","readme_md.html","rakefile.html","updatetest.html","vermillion.html","cfg.html","controller.html","base.html","change.html","create.html","firstrun.html","status.html","update.html","helper.html","apicommunication.html","endpoint.html","formatting.html","network.html","results.html","time.html","request.html","router.html","test.html","base.html","utils.html","setup.html","created.rid","created_rid.html","index.html","darkfish.js","jquery.js","navigation.js","search.js","search_index.js","searcher.js","rdoc.css","table_of_contents.html","vermillion-client_gemspec.html","vermillion-client.gemspec"],"longSearchIndex":["changebranchtest","configurationtest","createtest","updatetest","vermillion","vermillion::cfg","vermillion::controller","vermillion::controller::base","vermillion::controller::change","vermillion::controller::create","vermillion::controller::firstrun","vermillion::controller::status","vermillion::controller::update","vermillion::helper","vermillion::helper::apicommunication","vermillion::helper::endpoint","vermillion::helper::formatting","vermillion::helper::network","vermillion::helper::results","vermillion::helper::time","vermillion::request","vermillion::router","vermillion::test","vermillion::test::base","vermillion::utils","vermillion::helper::endpoint#add()","vermillion::helper::results#add()","vermillion::controller::update#all()","vermillion::cfg#bootstrap!()","vermillion::controller::change#branch()","vermillion::controller::base#can_exec?()","vermillion::controller::status#config()","vermillion::controller::update#config()","vermillion::cfg#constant?()","vermillion::controller::firstrun#default()","vermillion::controller::status#default()","vermillion::helper::endpoint#delete()","vermillion::controller::base#exec()","vermillion::helper::endpoint#exists?()","vermillion::helper::time::formatted()","vermillion::cfg#get()","vermillion::helper::endpoint#get()","vermillion::helper::network#get()","vermillion::helper::time::human_readable()","vermillion::helper::load()","vermillion::controller::base::new()","vermillion::helper::endpoint::new()","vermillion::helper::results::new()","vermillion::request::new()","vermillion::router::new()","vermillion::controller::create#one()","vermillion::controller::update#one()","vermillion::cfg#options()","vermillion::cfg#populate_config()","vermillion::helper::network#post()","vermillion::controller::base#post_exec()","vermillion::controller::base#pre_exec()","vermillion::controller::change#pre_exec()","vermillion::controller::create#pre_exec()","vermillion::router#pre_exec()","vermillion::helper::endpoint#protocol=()","vermillion::router#route()","vermillion::controller::base#sample()","vermillion::helper::apicommunication#send_to_all()","vermillion::helper::apicommunication#send_to_one()","vermillion::controller::status#servers()","vermillion::test::base#setup()","vermillion::helper::results#should_eval_to()","vermillion::helper::formatting#symbolize()","vermillion::test?()","changebranchtest#test_change_branch_one()","configurationtest#test_config_exist()","configurationtest#test_default()","createtest#test_default()","updatetest#test_update_config()","updatetest#test_update_one()","vermillion::utils::to_query_string()","vermillion::helper::endpoint#to_s()","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["ChangeBranchTest","","ChangeBranchTest.html","",""],["ConfigurationTest","","ConfigurationTest.html","",""],["CreateTest","","CreateTest.html","",""],["UpdateTest","","UpdateTest.html","",""],["Vermillion","","Vermillion.html","",""],["Vermillion::Cfg","","Vermillion/Cfg.html","",""],["Vermillion::Controller","","Vermillion/Controller.html","",""],["Vermillion::Controller::Base","","Vermillion/Controller/Base.html","",""],["Vermillion::Controller::Change","","Vermillion/Controller/Change.html","",""],["Vermillion::Controller::Create","","Vermillion/Controller/Create.html","",""],["Vermillion::Controller::Firstrun","","Vermillion/Controller/Firstrun.html","",""],["Vermillion::Controller::Status","","Vermillion/Controller/Status.html","",""],["Vermillion::Controller::Update","","Vermillion/Controller/Update.html","",""],["Vermillion::Helper","","Vermillion/Helper.html","",""],["Vermillion::Helper::ApiCommunication","","Vermillion/Helper/ApiCommunication.html","",""],["Vermillion::Helper::Endpoint","","Vermillion/Helper/Endpoint.html","",""],["Vermillion::Helper::Formatting","","Vermillion/Helper/Formatting.html","",""],["Vermillion::Helper::Network","","Vermillion/Helper/Network.html","",""],["Vermillion::Helper::Results","","Vermillion/Helper/Results.html","",""],["Vermillion::Helper::Time","","Vermillion/Helper/Time.html","",""],["Vermillion::Request","","Vermillion/Request.html","",""],["Vermillion::Router","","Vermillion/Router.html","",""],["Vermillion::Test","","Vermillion/Test.html","","<p>define Test namespace @since 0.3.0\n"],["Vermillion::Test::Base","","Vermillion/Test/Base.html","",""],["Vermillion::Utils","","Vermillion/Utils.html","",""],["add","Vermillion::Helper::Endpoint","Vermillion/Helper/Endpoint.html#method-i-add","(key, value)",""],["add","Vermillion::Helper::Results","Vermillion/Helper/Results.html#method-i-add","(result)","<p>Add a result for processing\n"],["all","Vermillion::Controller::Update","Vermillion/Controller/Update.html#method-i-all","()",""],["bootstrap!","Vermillion::Cfg","Vermillion/Cfg.html#method-i-bootstrap-21","()",""],["branch","Vermillion::Controller::Change","Vermillion/Controller/Change.html#method-i-branch","(server, to = nil)",""],["can_exec?","Vermillion::Controller::Base","Vermillion/Controller/Base.html#method-i-can_exec-3F","(command)","<p>Determines if the command can execute\n"],["config","Vermillion::Controller::Status","Vermillion/Controller/Status.html#method-i-config","()",""],["config","Vermillion::Controller::Update","Vermillion/Controller/Update.html#method-i-config","(server)",""],["constant?","Vermillion::Cfg","Vermillion/Cfg.html#method-i-constant-3F","(name)",""],["default","Vermillion::Controller::Firstrun","Vermillion/Controller/Firstrun.html#method-i-default","()",""],["default","Vermillion::Controller::Status","Vermillion/Controller/Status.html#method-i-default","()",""],["delete","Vermillion::Helper::Endpoint","Vermillion/Helper/Endpoint.html#method-i-delete","(key)",""],["exec","Vermillion::Controller::Base","Vermillion/Controller/Base.html#method-i-exec","()","<p>Handle the request\n"],["exists?","Vermillion::Helper::Endpoint","Vermillion/Helper/Endpoint.html#method-i-exists-3F","(key)",""],["formatted","Vermillion::Helper::Time","Vermillion/Helper/Time.html#method-c-formatted","(time = nil)",""],["get","Vermillion::Cfg","Vermillion/Cfg.html#method-i-get","(name)",""],["get","Vermillion::Helper::Endpoint","Vermillion/Helper/Endpoint.html#method-i-get","(key)",""],["get","Vermillion::Helper::Network","Vermillion/Helper/Network.html#method-i-get","(url, key)",""],["human_readable","Vermillion::Helper::Time","Vermillion/Helper/Time.html#method-c-human_readable","(start, finish)",""],["load","Vermillion::Helper","Vermillion/Helper.html#method-c-load","(klass, args = nil)",""],["new","Vermillion::Controller::Base","Vermillion/Controller/Base.html#method-c-new","(config, request)","<p>Setup internal variables that will be used in subclasses Params:\n<p>config &mdash; Instance of Vermillion::Cfg to …\n"],["new","Vermillion::Helper::Endpoint","Vermillion/Helper/Endpoint.html#method-c-new","(initial_path)",""],["new","Vermillion::Helper::Results","Vermillion/Helper/Results.html#method-c-new","()",""],["new","Vermillion::Request","Vermillion/Request.html#method-c-new","()",""],["new","Vermillion::Router","Vermillion/Router.html#method-c-new","(config_instance)",""],["one","Vermillion::Controller::Create","Vermillion/Controller/Create.html#method-i-one","(server, name = nil)",""],["one","Vermillion::Controller::Update","Vermillion/Controller/Update.html#method-i-one","(server)",""],["options","Vermillion::Cfg","Vermillion/Cfg.html#method-i-options","()",""],["populate_config","Vermillion::Cfg","Vermillion/Cfg.html#method-i-populate_config","()",""],["post","Vermillion::Helper::Network","Vermillion/Helper/Network.html#method-i-post","(url, key)",""],["post_exec","Vermillion::Controller::Base","Vermillion/Controller/Base.html#method-i-post_exec","()","<p>Perform post-run cleanup tasks, such as deleting old logs\n"],["pre_exec","Vermillion::Controller::Base","Vermillion/Controller/Base.html#method-i-pre_exec","()","<p>Perform pre-run tasks\n"],["pre_exec","Vermillion::Controller::Change","Vermillion/Controller/Change.html#method-i-pre_exec","()",""],["pre_exec","Vermillion::Controller::Create","Vermillion/Controller/Create.html#method-i-pre_exec","()",""],["pre_exec","Vermillion::Router","Vermillion/Router.html#method-i-pre_exec","()",""],["protocol=","Vermillion::Helper::Endpoint","Vermillion/Helper/Endpoint.html#method-i-protocol-3D","(use_https)",""],["route","Vermillion::Router","Vermillion/Router.html#method-i-route","()",""],["sample","Vermillion::Controller::Base","Vermillion/Controller/Base.html#method-i-sample","()","<p>default method called by exec if no argument is passed\n"],["send_to_all","Vermillion::Helper::ApiCommunication","Vermillion/Helper/ApiCommunication.html#method-i-send_to_all","(endpoint, args)",""],["send_to_one","Vermillion::Helper::ApiCommunication","Vermillion/Helper/ApiCommunication.html#method-i-send_to_one","(input, endpoint, args = {})",""],["servers","Vermillion::Controller::Status","Vermillion/Controller/Status.html#method-i-servers","()",""],["setup","Vermillion::Test::Base","Vermillion/Test/Base.html#method-i-setup","()",""],["should_eval_to","Vermillion::Helper::Results","Vermillion/Helper/Results.html#method-i-should_eval_to","(pass_value)",""],["symbolize","Vermillion::Helper::Formatting","Vermillion/Helper/Formatting.html#method-i-symbolize","(h)",""],["test?","Vermillion","Vermillion.html#method-c-test-3F","()","<p>@since 0.3.0\n"],["test_change_branch_one","ChangeBranchTest","ChangeBranchTest.html#method-i-test_change_branch_one","()",""],["test_config_exist","ConfigurationTest","ConfigurationTest.html#method-i-test_config_exist","()",""],["test_default","ConfigurationTest","ConfigurationTest.html#method-i-test_default","()",""],["test_default","CreateTest","CreateTest.html#method-i-test_default","()",""],["test_update_config","UpdateTest","UpdateTest.html#method-i-test_update_config","()",""],["test_update_one","UpdateTest","UpdateTest.html#method-i-test_update_one","()",""],["to_query_string","Vermillion::Utils","Vermillion/Utils.html#method-c-to_query_string","(args)",""],["to_s","Vermillion::Helper::Endpoint","Vermillion/Helper/Endpoint.html#method-i-to_s","()",""],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p>gemspec\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  vermillion-client (0.3.0)\n    mime-types\n    notifaction</pre>\n<p>GEM\n"],["README","","README_md.html","","<p>vermillion-client\n<p>Interact with your vermillion-server instances.\n<p>Installation\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” require “rake/testtask” require “client”\n<p>Rake::TestTask.new …\n"],["setup","","bin/setup.html","","<p>#!/bin/bash set -euo pipefail IFS=$&#39;nt&#39;\n<p>bundle install\n<p># Do any other automated setup that you …\n"],["ChangeBranchTest.html","","doc/ChangeBranchTest_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["ConfigurationTest.html","","doc/ConfigurationTest_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["CreateTest.html","","doc/CreateTest_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Gemfile.html","","doc/Gemfile_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Gemfile_lock.html","","doc/Gemfile_lock_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["README_md.html","","doc/README_md_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Rakefile.html","","doc/Rakefile_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["UpdateTest.html","","doc/UpdateTest_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Vermillion.html","","doc/Vermillion_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Cfg.html","","doc/Vermillion/Cfg_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Controller.html","","doc/Vermillion/Controller_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Base.html","","doc/Vermillion/Controller/Base_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Change.html","","doc/Vermillion/Controller/Change_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Create.html","","doc/Vermillion/Controller/Create_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Firstrun.html","","doc/Vermillion/Controller/Firstrun_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Status.html","","doc/Vermillion/Controller/Status_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Update.html","","doc/Vermillion/Controller/Update_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Helper.html","","doc/Vermillion/Helper_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["ApiCommunication.html","","doc/Vermillion/Helper/ApiCommunication_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Endpoint.html","","doc/Vermillion/Helper/Endpoint_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Formatting.html","","doc/Vermillion/Helper/Formatting_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Network.html","","doc/Vermillion/Helper/Network_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Results.html","","doc/Vermillion/Helper/Results_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Time.html","","doc/Vermillion/Helper/Time_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Request.html","","doc/Vermillion/Request_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Router.html","","doc/Vermillion/Router_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Test.html","","doc/Vermillion/Test_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Base.html","","doc/Vermillion/Test/Base_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Utils.html","","doc/Vermillion/Utils_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["setup.html","","doc/bin/setup_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["created.rid","","doc/created_rid.html","","<p>Wed, 12 Oct 2016 09:33:08 -0600 ./bin/setup     Thu, 21 Apr 2016 10:21:49\n-0600 ./bin/vermillion     …\n"],["created_rid.html","","doc/doc/created_rid_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["index.html","","doc/index_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["darkfish.js","","doc/js/darkfish_js.html","","\n<pre>Darkfish Page Functions\n$Id: darkfish.js 53 2009-01-07 02:52:03Z deveiant $\n\nAuthor: Michael Granger ...</pre>\n"],["jquery.js","","doc/js/jquery_js.html","","\n<pre>! jQuery v1.6.4 http://jquery.com/ | http://jquery.org/license</pre>\n<p>(function(a,b){function cu(a){return f.isWindow …\n"],["navigation.js","","doc/js/navigation_js.html","","\n<pre>Navigation allows movement using the arrow keys through the search results.\n\nWhen using this library ...</pre>\n"],["search.js","","doc/js/search_js.html","","<p>Search = function(data, input, result) {\n\n<pre>this.data = data;\nthis.$input = $(input);\nthis.$result = $(result); ...</pre>\n"],["search_index.js","","doc/js/search_index_js.html","","<p>var search_data = {“index”:{“searchIndex”:,“longSearchIndex”:,“info”:[,[“ …\n"],["searcher.js","","doc/js/searcher_js.html","","<p>Searcher = function(data) {\n\n<pre>this.data = data;\nthis.handlers = [];</pre>\n<p>}\n"],["rdoc.css","","doc/rdoc_css.html","","\n<pre>&quot;Darkfish&quot; Rdoc CSS\n$Id: rdoc.css 54 2009-01-27 01:09:48Z deveiant $\n\nAuthor: Michael Granger &lt;ged@FaerieMUD.org&gt; ...</pre>\n"],["table_of_contents.html","","doc/table_of_contents_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["vermillion-client_gemspec.html","","doc/vermillion-client_gemspec_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["vermillion-client.gemspec","","vermillion-client_gemspec.html","","<p>lib = File.expand_path(&#39;../lib&#39;, __FILE__) $LOAD_PATH.unshift(lib)\nunless $LOAD_PATH.include?(lib) …\n"]]}}